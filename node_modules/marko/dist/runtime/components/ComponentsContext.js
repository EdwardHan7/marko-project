"use strict";
var GlobalComponentsContext = require("./GlobalComponentsContext");

function ComponentsContext(out, parentComponentsContext) {
  var globalComponentsContext;
  var componentDef;

  if (parentComponentsContext) {
    globalComponentsContext = parentComponentsContext.o_;
    componentDef = parentComponentsContext.n_;

    var nestedContextsForParent;
    if (
    !(nestedContextsForParent = parentComponentsContext._b_))
    {
      nestedContextsForParent = parentComponentsContext._b_ = [];
    }

    nestedContextsForParent.push(this);
  } else {
    globalComponentsContext = out.global.b_;
    if (globalComponentsContext === undefined) {
      out.global.b_ = globalComponentsContext =
      new GlobalComponentsContext(out);
    }
  }

  this.o_ = globalComponentsContext;
  this.b_ = [];
  this.q_ = out;
  this.n_ = componentDef;
  this._b_ = undefined;
  this.u_ =
  parentComponentsContext && parentComponentsContext.u_;
}

ComponentsContext.prototype = {
  ad_: function (host) {
    var componentDefs = this.b_;

    ComponentsContext._E_(componentDefs, host);

    this.q_.emit("aM_");

    // Reset things stored in global since global is retained for
    // future renders
    this.q_.global.b_ = undefined;

    return componentDefs;
  }
};

function getComponentsContext(out) {
  return out.b_ || (out.b_ = new ComponentsContext(out));
}

module.exports = exports = ComponentsContext;

exports.R_ = getComponentsContext;